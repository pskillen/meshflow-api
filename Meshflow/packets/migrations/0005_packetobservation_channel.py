# Generated by Django 5.2 on 2025-05-13 12:56

import django.db.models.deletion
from django.db import migrations, models

def migrate_channel_idx_to_channel(apps, schema_editor):
    PacketObservation = apps.get_model('packets', 'PacketObservation')
    ManagedNode = apps.get_model('nodes', 'ManagedNode')
    MessageChannel = apps.get_model('constellations', 'MessageChannel')

    try:
        from tqdm import tqdm
    except ImportError:
        # Fallback: dummy tqdm
        def tqdm(x, *args, **kwargs):
            return x

    # Step 1: Bulk fetch all observers
    observers = {o.pk: o for o in ManagedNode.objects.all()}

    # Step 2: Bulk fetch all channels for all observers
    # We'll assume channel_0 ... channel_7 fields exist
    observer_channels = {}
    for observer in ManagedNode.objects.all():
        observer_channels[observer.pk] = {i: getattr(observer, f'channel_{i}', None) for i in range(8)}

    observations = PacketObservation.objects.all()
    obs_count = observations.count()
    print(f"\nMigrating {obs_count} packet observations")

    for obs in tqdm(observations.iterator(), total=obs_count, desc="Migrating PacketObservations"):
        if obs.channel_idx is not None:
            observer = observers.get(obs.observer_id)
            if observer:
                channel = observer_channels[observer.pk].get(obs.channel_idx)
                if channel is not None:
                    obs.channel = channel
                    obs.save(update_fields=['channel'])

def migrate_channel_to_channel_idx(apps, schema_editor):
    PacketObservation = apps.get_model('packets', 'PacketObservation')
    for obs in PacketObservation.objects.all():
        if obs.channel is not None:
            # Try to find the index by matching the observer's channel fields
            observer = obs.observer
            for idx in range(8):
                if getattr(observer, f'channel_{idx}', None) == obs.channel:
                    obs.channel_idx = idx
                    obs.save(update_fields=['channel_idx'])
                    break
            else:
                obs.channel_idx = None
                obs.save(update_fields=['channel_idx'])

class Migration(migrations.Migration):

    dependencies = [
        ('constellations', '0004_constellation_map_color'),
        ('packets', '0004_rename_channel_packetobservation_channel_idx'),
    ]

    operations = [
        migrations.AddField(
            model_name='packetobservation',
            name='channel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='constellations.messagechannel'),
        ),
        migrations.RunPython(migrate_channel_idx_to_channel, migrate_channel_to_channel_idx),
    ]
