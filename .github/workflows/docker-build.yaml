name: docker-build-and-push

on:
  workflow_call:
    inputs:
      VERSION_TAG:
        required: true
        type: string
      IS_LATEST:
        required: false
        type: boolean
        default: false
      IS_PRERELEASE:
        required: false
        type: boolean
        default: false


permissions:
  contents: read
  packages: write


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        include:
          - platform: linux/amd64
            base_image: "python:3.12"
          - platform: linux/arm64
            base_image: "arm64v8/python:3.12"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup vars
        run: |
          PLATFORM_TAG=$(echo "${{ matrix.platform }}" | sed 's|/|-|g')
          echo "PLATFORM_TAG=$PLATFORM_TAG" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-${{ env.PLATFORM_TAG }}
            ${{ inputs.IS_LATEST && (inputs.IS_PRERELEASE && format('ghcr.io/{0}:latest-rc-{1}', github.repository, env.PLATFORM_TAG) || format('ghcr.io/{0}:latest-{1}', github.repository, env.PLATFORM_TAG)) || '' }}
          build-args: |
            VERSION=${{ inputs.VERSION_TAG }}
            BASE_IMAGE=${{ matrix.base_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Migrations Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          file: Dockerfile-migrations
          tags: |
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations-${{ env.PLATFORM_TAG }}
            ${{ inputs.IS_LATEST && (inputs.IS_PRERELEASE && format('ghcr.io/{0}:latest-rc-migrations-{1}', github.repository, env.PLATFORM_TAG) || format('ghcr.io/{0}:latest-migrations-{1}', github.repository, env.PLATFORM_TAG)) || '' }}
          build-args: |
            VERSION=${{ inputs.VERSION_TAG }}
            BASE_IMAGE=${{ matrix.base_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    runs-on: ubuntu-latest
    needs:
    - build-and-push

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Version Manifest
        if: inputs.IS_LATEST
        run: |
          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }} \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-linux-arm64

          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations-linux-arm64

      - name: Create Latest Manifest
        if: inputs.IS_LATEST && !inputs.IS_PRERELEASE
        run: |
          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:latest \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-linux-arm64

          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:latest-migrations \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations-linux-arm64

      - name: Create Latest-RC Manifest
        if: inputs.IS_LATEST && inputs.IS_PRERELEASE
        run: |
          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:latest-rc \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-linux-arm64

          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:latest-rc-migrations \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ inputs.VERSION_TAG }}-migrations-linux-arm64 