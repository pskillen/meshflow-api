name: docker-build-and-push

on:
  workflow_call:
    inputs:
      VERSION_LABEL:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string


permissions:
  contents: read
  packages: write


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        include:
          - platform: linux/amd64
            base_image: "python:3.12"
          - platform: linux/arm64
            base_image: "arm64v8/python:3.12"

    outputs:
      LATEST_TAG: ${{ steps.set_tags.outputs.LATEST_TAG }}
      LATEST_MIGRATIONS_TAG: ${{ steps.set_tags.outputs.LATEST_MIGRATIONS_TAG }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup vars
        id: set_tags
        run: |
          PLATFORM_TAG=$(echo "${{ matrix.platform }}" | sed 's|/|-|g')
          echo "PLATFORM_TAG=$PLATFORM_TAG" >> $GITHUB_ENV
          if [[ "${{ inputs.ENVIRONMENT }}" == "dev" ]]; then
            LATEST_TAG=latest-dev
            LATEST_MIGRATIONS_TAG=latest-dev-migrations
            LATEST_DOCS_TAG=latest-dev-docs
          elif [[ "${{ inputs.ENVIRONMENT }}" == "preprod" ]]; then
            LATEST_TAG=latest-rc
            LATEST_MIGRATIONS_TAG=latest-rc-migrations
            LATEST_DOCS_TAG=latest-rc-docs
          elif [[ "${{ inputs.ENVIRONMENT }}" == "prod" ]]; then
            LATEST_TAG=latest
            LATEST_MIGRATIONS_TAG=latest-migrations
            LATEST_DOCS_TAG=latest-docs
          else
            LATEST_TAG=
            LATEST_MIGRATIONS_TAG=
            LATEST_DOCS_TAG=
          fi
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "LATEST_MIGRATIONS_TAG=$LATEST_MIGRATIONS_TAG" >> $GITHUB_ENV
          echo "LATEST_DOCS_TAG=$LATEST_DOCS_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "LATEST_MIGRATIONS_TAG=$LATEST_MIGRATIONS_TAG" >> $GITHUB_OUTPUT
          echo "LATEST_DOCS_TAG=$LATEST_DOCS_TAG" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.LATEST_TAG }}-${{ env.PLATFORM_TAG }}
          build-args: |
            VERSION=${{ inputs.VERSION_LABEL }}
            BASE_IMAGE=${{ matrix.base_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Migrations Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          file: Dockerfile-migrations
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.LATEST_MIGRATIONS_TAG }}-${{ env.PLATFORM_TAG }}
          build-args: |
            VERSION=${{ inputs.VERSION_LABEL }}
            BASE_IMAGE=${{ matrix.base_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Redocly Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          file: Dockerfile-redocly
          tags: |
            ghcr.io/${{ github.repository }}-docs:${{ env.LATEST_DOCS_TAG }}-${{ env.PLATFORM_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    runs-on: ubuntu-latest
    needs:
    - build-and-push

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Print manifest tag outputs
        run: |
          echo "LATEST_TAG=${{ needs.build-and-push.outputs.LATEST_TAG }}" >> $GITHUB_ENV
          echo "LATEST_MIGRATIONS_TAG=${{ needs.build-and-push.outputs.LATEST_MIGRATIONS_TAG }}" >> $GITHUB_ENV
          echo "LATEST_DOCS_TAG=${{ needs.build-and-push.outputs.LATEST_DOCS_TAG }}" >> $GITHUB_ENV

      - name: Create Version Manifest
        run: |
          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:${{ env.LATEST_TAG }} \
            ghcr.io/${{ github.repository }}:${{ env.LATEST_TAG }}-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ env.LATEST_TAG }}-linux-arm64

          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}:${{ env.LATEST_MIGRATIONS_TAG }} \
            ghcr.io/${{ github.repository }}:${{ env.LATEST_MIGRATIONS_TAG }}-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ env.LATEST_MIGRATIONS_TAG }}-linux-arm64

          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository }}-docs:${{ env.LATEST_DOCS_TAG }} \
            ghcr.io/${{ github.repository }}-docs:${{ env.LATEST_DOCS_TAG }}-linux-amd64 \
            ghcr.io/${{ github.repository }}-docs:${{ env.LATEST_DOCS_TAG }}-linux-arm64
